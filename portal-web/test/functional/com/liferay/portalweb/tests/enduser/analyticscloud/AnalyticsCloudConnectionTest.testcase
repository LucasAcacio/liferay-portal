@component-name = "portal-analytics-cloud"
definition {

	property analytics.cloud.enabled = "true";
	property minimum.slave.ram = "24";
	property portal.release = "false";
	property portal.upstream = "true";
	property slave.label = "slave-1";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		ACUtils.launchAC();

		ACSettings.takeTokenFromAnalyticsCloud();

		TestCase.setUpPortalInstance();

		ACUtils.launchDXP();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		ACUtils.tearDownDXP();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}

		ACUtils.tearDownAC();
	}

	@description = "Automation ID: LRAC-8832 | Test Summary: Add DXP data source and configure only one site"
	@ignore = "true"
	@priority = "3"
	test AddDataSourceForOneSite {

		// TODO LRAC-8832 AddDataSourceForOneSite

	}

	@description = "Automation ID: LRAC-8830 | Test Summary: Add DXP data source and configure only an Organization's users"
	@ignore = "true"
	@priority = "3"
	test AddDataSourceForOrganizationUsers {

		// TODO LRAC-8830 AddDataSourceForOrganizationUsers

	}

	@description = "Automation ID: LRAC-8831 | Test Summary: Add DXP data source and configure only an User Group's users"
	@ignore = "true"
	@priority = "3"
	test AddDataSourceForUsersGroups {

		// TODO LRAC-8831 AddDataSourceForUsersGroups

	}

	@description = "Automation ID: LRAC-8108 | Test Summary: Add date source page that allows user to choose type of data source"
	@priority = "5"
	test AddDataSourcePageAllowsUserToChooseWhatKind {
		task ("Go to data sources and enter in each one to assert that the user can choose any of them") {
			ACUtils.launchAC();

			ACNavigation.goToSettings();

			ACSettings.goToDataSources();

			ACSettings.clickGenericAddOrConfirmationButton();

			ACSettings.assertCanChooseDataSourceOptions();
		}
	}

	@description = "Automation ID: LRAC-8835 | Test Summary: Assert Liferay Data Source Contact Count Preview"
	@ignore = "true"
	@priority = "4"
	test AssertLiferayDataSourceContactCountPreview {

		// TODO LRAC-8835 AssertLiferayDataSourceContactCountPreview

	}

	@description = "Automation ID: LRAC-8834 | Test Summary: Assert the Liferay DXP Data Source Status"
	@priority = "3"
	test AssertLiferayDataSourceStatus {
		task ("Connect DXP to AC") {
			var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud();

			var dataSource = StringUtil.replace("${propertyName}", " Combined Property", "");
		}

		task ("Launch AC, go to settings and data source and click in the data source searched") {
			ACUtils.launchAC();

			ACNavigation.goToSettings();

			ACSettings.goToDataSources();

			ACUtils.searchBar(searchItem = "${dataSource}");

			ACNavigation.openItem(itemName = "${dataSource}");
		}

		task ("Assert the data source status") {
			ACSettings.assertDataSourceStatus(status = "Active");
		}

		task ("Disconnect data source and assert the data source status") {
			ACSettings.disconnectDataSource();

			ACSettings.assertDataSourceStatus(status = "Disconnected");
		}
	}

	@description = "Automation ID: LRAC-8836 | Test Summary: Cancel Creating a DXP Data Source"
	@ignore = "true"
	@priority = "3"
	test CancelCreatingDxpDataSource {

		// TODO LRAC-8836 CancelCreatingDxpDataSource

	}

	@description = "Automation ID: LRAC-8107 | Test Summary: Navigates to data source page"
	@priority = "5"
	test CanNavigatesToDataSourcePage {
		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud();

		var dataSource = StringUtil.replace("${propertyName}", " Combined Property", "");

		ACDXPSettings.syncNewContactData();

		Navigator.openURL();

		Pause(locator1 = "5000");

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = "${propertyName}");

		ACNavigation.goToSettings();

		ACUtils.assertItemsName(itemList = "${dataSource},Beryl Commerce");
	}

	@description = "Sync Liferay Data Source Contacts"
	@priority = "5"
	test CanSyncAllContactsFromDXPToAC {
		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud();

		Navigator.openURL();

		Pause(locator1 = "5000");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		ACUtils.closeAllSessionsAndWait();

		ACUtils.launchAC();

		ACProperties.switchProperty(propertyName = "${propertyName}");

		ACNavigation.goToIndividuals();

		ACNavigation.switchTab(tabName = "Known Individuals");

		ACUtils.searchBar(searchItem = "userfn userln");

		ACIndividualsDashboard.goToKnownIndividualDetails(individualName = "userfn userln");

		ACNavigation.switchTab(tabName = "Details");

		ACIndividualsDashboard.assertIndividualAttribute(individualAttribute = "userea@liferay.com");

		ACIndividualsDashboard.assertIndividualAttribute(individualAttribute = "userfn");
	}

	@description = "Validate if the user can connect AC to DXP"
	@priority = "5"
	test ConnectACtoDXP {
		var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud();
	}

	@description = "Automation ID: LRAC-8821 | Test Summary: Data Source list is searchable"
	@ignore = "true"
	@priority = "5"
	test DataSourceListIsSearchable {

		// TODO LRAC-8821 DataSourceListIsSearchable

	}

	@description = "Automation ID: LRAC-8825 | Test Summary: Validate Invalid Token"
	@priority = "4"
	test InvalidToken {
		ACUtils.launchAC();

		AnalyticsCloud.takeInvalidTokenFromAnalyticsCloud();
	}

	@description = "Automation ID: LRAC-8820 | Test Summary: There is a list of connected data sources including a table of properties/status"
	@ignore = "true"
	@priority = "5"
	test ListOfConnectedDataSourcesIncludingTablePropertiesStatus {

		// TODO LRAC-8820 ListOfConnectedDataSourcesIncludingTablePropertiesStatus

	}

	@description = "Automation ID: LRAC-8833 | Test Summary: Preview number of contacts to be added when configuring contacts"
	@ignore = "true"
	@priority = "5"
	test PreviewNumberOfContactsToAddedWhenSyncContacts {

		// TODO LRAC-8833 PreviewNumberOfContactsToAddedWhenSyncContacts

	}

	@description = "Automation ID: LRAC-8822 | Test Summary: Sync Liferay Data Source Contacts by User Groups"
	@priority = "4"
	test SyncDataSourceContactsByGroups {
		property minimum.slave.ram = "24";
		property slave.label = "slave-1";

		task ("Add user, group and assign user to group") {
			JSONUser.addUser(
				userEmailAddress = "userea@liferay.com",
				userFirstName = "userfn",
				userLastName = "userln",
				userScreenName = "usersn");

			JSONUserGroup.addUserGroup(
				userGroupDescription = "User Group Description",
				userGroupName = "User Group Name");

			ApplicationsMenu.gotoPortlet(
				category = "Users",
				panel = "Control Panel",
				portlet = "Users and Organizations");

			UserNavigator.gotoUser(userScreenName = "usersn");

			User.assignUserGroupCP(userGroupName = "User Group Name");
		}

		task ("Connect to AC") {
			var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(userGroup = "User Group Name");
		}
		task ("Login as another user and visit DXP") {
			Navigator.openURL();

			Pause(locator1 = "5000");

			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("Close sessions") {
			ACUtils.closeAllSessionsAndWait();

			ACUtils.launchAC();
		}

		task ("Go to Known Individuals tab") {
			ACProperties.switchProperty(propertyName = "${propertyName}");

			ACNavigation.goToIndividuals();

			ACNavigation.switchTab(tabName = "Known Individuals");
		}

		task ("Assert that the new user is present") {
			ACUtils.searchBar(searchItem = "userfn userln");

			ACIndividualsDashboard.goToKnownIndividualDetails(individualName = "userfn userln");

			ACNavigation.switchTab(tabName = "Details");

			ACIndividualsDashboard.assertIndividualAttribute(individualAttribute = "userea@liferay.com");

			ACIndividualsDashboard.assertIndividualAttribute(individualAttribute = "userfn");
		}
	}

	@description = "Automation ID: LRAC-8823 | Test Summary: Sync Liferay Data Source Contacts by Organizations"
	@ignore = "true"
	@priority = "4"
	test SyncDataSourceContactsByOrganizations {

		// TODO LRAC-8823 SyncDataSourceContactsByOrganizations

	}

	@description = "Automation ID: LRAC-8824 | Test Summary: Preview the number of User Group contacts to sync"
	@ignore = "true"
	@priority = "4"
	test UserGroupContactSyncPreview {

		// TODO LRAC-8824 UserGroupContactSyncPreview

	}

	@description = "Automation ID: LRAC-8128 | Test Summary: View asset added by DXP data source"
	@ignore = "true"
	@priority = "5"
	test ViewAssetAddedByDXPDataSource {

		// TODO LRAC-8128 ViewAssetAddedByDXPDataSource

	}

	@description = "Automation ID: LRAC-8127 | Test Summary: View page added by DXP data source"
	@ignore = "true"
	@priority = "5"
	test ViewPageAddedByDXPDataSource {

		// TODO LRAC-8127 ViewPageAddedByDXPDataSource

	}

}