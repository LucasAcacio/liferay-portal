@component-name = "portal-workflow"
definition {

	property custom.properties = "default.layout.template.id=1_column${line.separator}company.default.time.zone=America/Los_Angeles";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Workflow";

	setUp {
		TestCase.setUpPortalInstance();

		var testPortalInstance = PropsUtil.get("test.portal.instance");

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		User.firstLoginPG();

		if ("${testPortalInstance}" != "true") {
			ApplicationsMenu.gotoPortlet(
				category = "Configuration",
				panel = "Control Panel",
				portlet = "Search");

			SearchAdministration.executeSearchActions(actionsDescription = "Reindex all search indexes.");

			ApplicationsMenu.gotoSite(site = "${siteName}");
		}

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			panel = "Site Administration",
			portlet = "Pages");

		SitePages.addPublicPage(
			pageName = "Calendar Page",
			sitePageType = "Widget Page");

		SitePages.configurePage(
			columnName = "1 Column",
			pageName = "Calendar Page",
			privacy = "Public Pages",
			sitePageType = "Widget Page");

		Navigator.gotoPage(pageName = "Calendar Page");

		Portlet.addPG(portletName = "Calendar");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Workflow");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Calendar Event");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Title",
			eventType = "Regular",
			optionSet = "true",
			optionSetValue = "inviteResource",
			pageName = "Calendar Page",
			specificOptionSetValue = "Test Test",
			workflow = "true");

		Navigator.gotoPage(pageName = "Calendar Page");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Navigator.gotoPage(pageName = "Calendar Page");

			if (IsElementPresent(locator1 = "Calendar#SCHEDULER_EVENT_GENERIC")) {
				CalendarEvent.tearDown();
			}

			Calendar.tearDown();

			Page.tearDownPG();

			Workflow.tearDownSiteWorkflow();
		}
	}

	@description = "Verify that an approved Calendar Event can be deleted"
	@ignore = "Test Stub"
	@priority = "4"
	test ApprovedEventCanBeDeleted {

		// TODO LRQA-68616 ApprovedEventCanBeDeleted pending implementation

	}

	@priority = "5"
	test ApproveEventWithInvitedUser {
		property app.server.types = "jboss,tcserver,tomcat,weblogic,websphere,wildfly";
		property database.types = "db2,hypersonic,mariadb,mysql,oracle,postgresql,sqlserver,sybase";
		property portal.acceptance = "true";

		var siteName = TestCase.getSiteName();

		CalendarNavigator.gotoView(viewType = "Week");

		CalendarEvent.viewSiteRSVPWithUnapprovedWorkflow(
			eventTitle = "Calendar Event Title",
			siteCalendarName = "${siteName}");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoView(viewType = "Week");

		CalendarEvent.viewNoUserInviteWithUnapprovedWorkflow(
			eventTitle = "Calendar Event Title",
			siteCalendarName = "${siteName}");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Calendar Event Title",
			workflowAssetType = "Calendar Event",
			workflowTask = "Review");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Calendar Event Title",
			workflowAssetType = "Calendar Event",
			workflowTask = "Review");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoView(viewType = "Week");

		CalendarEvent.viewSiteRSVPWithApprovedWorkflow(
			eventTitle = "Calendar Event Title",
			rsvp = "Yes",
			userCalendarName = "Test Test");

		CalendarEvent.viewInvitedUserRSVPWithApprovedWorkflow(
			eventTitle = "Calendar Event Title",
			siteCalendarName = "${siteName}",
			userCalendarName = "Test Test");
	}

	@description = "Verify that a calendar event created on the pop up can be approved"
	@ignore = "Test Stub"
	@priority = "4"
	test CalendarPopUpCanBeApproved {

		// TODO LRQA-68603 CalendarPopUpCanBeApproved pending implementation

	}

	@description = "Verify that a calendar event created on the pop up can be rejected"
	@ignore = "Test Stub"
	@priority = "3"
	test CalendarPopUpCanBeRejected {

		// TODO LRQA-68604 CalendarPopUpCanBeRejected pending implementation

	}

	@description = "Verify that a calendar event on draft can be approved"
	@ignore = "Test Stub"
	@priority = "4"
	test CalendarWithDraftStatusCanBecomeApproved {

		// TODO LRQA-68602 CalendarWithDraftStatusCanBecomeApproved pending implementation

	}

	@description = "Verify that the user can approve calendar events on Single Approver workflow"
	@ignore = "Test Stub"
	@priority = "5"
	test CanApproveCalendarEventOnSingleApprover {

		// TODO LRQA-68594 CanApproveCalendarEventOnSingleApprover pending implementation

	}

	@description = "Verify that the user can assign a Workflow to Calendar Event"
	@ignore = "Test Stub"
	@priority = "5"
	test CanAssignWorkflowToCalendarEvent {

		// TODO LRQA-68593 CanAssignWorkflowToCalendarEvent pending implementation

	}

	@description = "This is a use case for LPS-59572."
	@priority = "3"
	test DeleteAndRestoreEvent {
		property portal.upstream = "quarantine";

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		CalendarNavigator.gotoView(viewType = "Week");

		CalendarEvent.viewSiteRSVPWithUnapprovedWorkflow(
			eventTitle = "Calendar Event Title",
			siteCalendarName = "${siteName}");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.viewTaskAssignedToMyRoles(
			workflowAssetTitle = "Calendar Event Title",
			workflowAssetType = "Calendar Event",
			workflowTask = "Review");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoView(viewType = "Week");

		CalendarEvent.deleteSpecific(eventTitle = "Calendar Event Title");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoView(viewType = "Week");

		CalendarScheduler.viewDefault(
			eventTitle = "Calendar Event Title",
			pageName = "Calendar Page");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.viewDefaultMyWorkflowTasksCP();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Recycle Bin",
			panel = "Site Administration",
			portlet = "Recycle Bin");

		RecycleBin.restoreCP(assetName = "Calendar Event Title");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoView(viewType = "Week");

		CalendarEvent.viewSiteRSVPWithUnapprovedWorkflow(
			eventTitle = "Calendar Event Title",
			siteCalendarName = "${siteName}");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Calendar Event Title",
			workflowAssetType = "Calendar Event",
			workflowTask = "Review");

		Workflow.viewTaskAssignedToMe(
			workflowAssetTitle = "Calendar Event Title",
			workflowAssetType = "Calendar Event",
			workflowTask = "Review");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoView(viewType = "Week");

		CalendarEvent.deleteSpecific(eventTitle = "Calendar Event Title");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoView(viewType = "Week");

		CalendarScheduler.viewDefault(
			eventTitle = "Calendar Event Title",
			pageName = "Calendar Page");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.viewDefaultMyWorkflowTasksCP();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Recycle Bin",
			panel = "Site Administration",
			portlet = "Recycle Bin");

		RecycleBin.restoreCP(assetName = "Calendar Event Title");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoView(viewType = "Week");

		CalendarEvent.viewSiteRSVPWithUnapprovedWorkflow(
			eventTitle = "Calendar Event Title",
			siteCalendarName = "${siteName}");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Calendar Event Title",
			workflowAssetType = "Calendar Event",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Calendar Event Title",
			workflowAssetType = "Calendar Event",
			workflowTask = "Review");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoView(viewType = "Week");

		CalendarEvent.viewSiteRSVPWithApprovedWorkflow(
			eventTitle = "Calendar Event Title",
			rsvp = "Yes",
			userCalendarName = "Test Test");

		CalendarEvent.viewInvitedUserRSVPWithApprovedWorkflow(
			eventTitle = "Calendar Event Title",
			siteCalendarName = "${siteName}",
			userCalendarName = "Test Test");
	}

	@priority = "4"
	test RejectEventWithInvitedUser {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		CalendarNavigator.gotoView(viewType = "Week");

		CalendarEvent.viewSiteRSVPWithUnapprovedWorkflow(
			eventTitle = "Calendar Event Title",
			siteCalendarName = "${siteName}");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoView(viewType = "Week");

		CalendarEvent.viewNoUserInviteWithUnapprovedWorkflow(
			eventTitle = "Calendar Event Title",
			siteCalendarName = "${siteName}");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Calendar Event Title",
			workflowAssetType = "Calendar Event",
			workflowTask = "Review");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.rejectTaskByActions(
			workflowAssetTitle = "Calendar Event Title",
			workflowAssetType = "Calendar Event",
			workflowTask = "Review");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoView(viewType = "Week");

		CalendarEvent.viewSiteRSVPWithUnapprovedWorkflow(
			eventTitle = "Calendar Event Title",
			siteCalendarName = "${siteName}");

		CalendarEvent.viewNoUserInviteWithUnapprovedWorkflow(
			eventTitle = "Calendar Event Title",
			siteCalendarName = "${siteName}",
			userCalendarName = "Test Test");
	}

	@description = "Verify that the Calendar Event status become pending after submit"
	@priority = "4"
	test StatusBecomePendingAfterSubmit {
		CalendarScheduler.selectSpecificEvent(eventTitle = "Calendar Event Title");

		CalendarScheduler.gotoDetailsViaDialogBox();

		CalendarEvent.viewStatusViaDetails(status = "Pending");
	}

	@description = "Verify that the Calendar Event status changes when approved"
	@ignore = "Test Stub"
	@priority = "4"
	test StatusChangesWhenApproved {

		// TODO LRQA-68597 StatusChangesWhenApproved pending implementation

	}

	@description = "Verify that the Calendar Event status stay on pending when rejected after submitted"
	@ignore = "Test Stub"
	@priority = "3"
	test StatusStayPendingAfterRejected {

		// TODO LRQA-68599 StatusStayPendingAfterRejected pending implementation

	}

	@description = "Verify that a Unpublish warning message appears when the user edit a approved event"
	@ignore = "Test Stub"
	@priority = "3"
	test UnpublishWarningMessageIsDisplayedOnEdit {

		// TODO LRQA-68596 UnpublishWarningMessageIsDisplayedOnEdit pending implementation

	}

	@priority = "3"
	test ViewPendingStatusInEventDetails {
		CalendarNavigator.gotoView(viewType = "Week");

		CalendarScheduler.addEventToday(
			eventTitle = "Calendar Event Today Week",
			viewType = "Week");

		CalendarScheduler.selectSpecificEvent(eventTitle = "Calendar Event Title");

		CalendarScheduler.gotoDetailsViaDialogBox();

		CalendarEvent.viewStatusViaDetails(status = "Pending");
	}

}